{"version":3,"file":"app~e4317507.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/utils/sw-register.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/views/templates/template-creator.js","webpack://restaurant-apps/./src/scripts/views/pages/home.js","webpack://restaurant-apps/./src/scripts/utils/like-button-presenter.js","webpack://restaurant-apps/./src/scripts/views/pages/detail.js","webpack://restaurant-apps/./src/scripts/views/pages/favorite.js","webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/views/app.js"],"sourcesContent":["import * as WorkboxWindow from 'workbox-window';\r\n\r\nconst swRegister = async () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Service Worker not supported in the browser');\r\n    return;\r\n  }\r\n\r\n  const wb = new WorkboxWindow.Workbox('./sw.bundle.js');\r\n\r\n  try {\r\n    await wb.register();\r\n    console.log('Service worker registered');\r\n  } catch (error) {\r\n    console.log('Failed to register service worker', error);\r\n  }\r\n};\r\n\r\nexport default swRegister;\r\n","const UrlParser = {\r\n  parseActiveUrlWithCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    const splitedUrl = this._urlSplitter(url);\r\n    return this._urlCombiner(splitedUrl);\r\n  },\r\n\r\n  parseActiveUrlWithoutCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    return this._urlSplitter(url);\r\n  },\r\n\r\n  _urlSplitter(url) {\r\n    const urlsSplits = url.split('/');\r\n    return {\r\n      resource: urlsSplits[1] || null,\r\n      id: urlsSplits[2] || null,\r\n      verb: urlsSplits[3] || null,\r\n    };\r\n  },\r\n\r\n  _urlCombiner(splitedUrl) {\r\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\r\n      + (splitedUrl.id ? '/:id' : '')\r\n      + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\r\n  },\r\n};\r\n\r\nexport default UrlParser;\r\n","import CONFIG from '../../globals/config';\r\n\r\nconst createRestaurantItemTemplate = (restaurant) => `\r\n  <article class=\"list-item\">\r\n    <a href=\"${`/#/detail/${restaurant.id}`}\"> \r\n    <img class=\"lazyload\" tabindex=\"0\" data-src=\"${CONFIG.BASE_IMAGE_URL + restaurant.pictureId}\" alt=\"${restaurant.name || '-'} restaurant\" />\r\n    <div class=\"list-content\">\r\n      <h3 tabindex=\"0\" class=\"restaurant__name\">${restaurant.name || '-'}</h3>\r\n      <p tabindex=\"0\" class=\"item-rating\"><strong>★</strong> ${restaurant.rating || '-'}</p>\r\n      <p tabindex=\"0\" class=\"item-location\">Location: ${restaurant.city || '-'}</p>\r\n    </div></a>\r\n  </article>\r\n  `;\r\n\r\nconst createRestaurantDetailTemplate = (restaurant) => `\r\n  <img tabindex=\"0\" class=\"restaurantImg\" src=\"${CONFIG.BASE_IMAGE_URL + restaurant.pictureId}\" alt=\"restaurant images\">\r\n    <div tabindex=\"0\" class=\"content-detail\">\r\n      <h2 tabindex=\"0\" class=\"restaurantName-detail restaurant__name\">${restaurant.name}</h1>\r\n      <p tabindex=\"0\" class=\"rating-detail\">⭐️ ${restaurant.rating}</p>\r\n      <div tabindex=\"0\" class=\"description-detail\">\r\n        <h3>Description</h3>\r\n        <p class=\"description-content\">${restaurant.description}</p>\r\n      </div>\r\n      <div tabindex=\"0\" class=\"location-detail\">\r\n        <h3>Location</h3>\r\n        <p tabindex=\"0\" class=\"location-address\">${restaurant.address}, ${restaurant.city}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div tabindex=\"0\" class=\"restaurantMenu\">\r\n      <h2>Restaurant Menu</h2>\r\n      <div tabindex=\"0\" class=\"foods-menu\">\r\n        <p tabindex=\"0\" class=\"menu-title\">Foods</p>\r\n        <p tabindex=\"0\" class=\"foods-item\">\r\n          ${restaurant.menus.foods.map((food) => `${food.name}, `).join('')}\r\n        </p>\r\n      </div>\r\n      <div tabindex=\"0\" class=\"drinks-menu\"  >\r\n        <p tabindex=\"0\" class=\"menu-title\">Drinks</p>\r\n        <p tabindex=\"0\" class=\"drinks-item\"> \r\n        ${restaurant.menus.drinks.map((drink) => `${drink.name}, `).join('')}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div tabindex=\"0\" class=\"costumerReviews\">\r\n      <h2>Costumer Reviews</h2>\r\n      <div tabindex=\"0\" class=\"listReviews\">\r\n        ${restaurant.customerReviews\r\n    .map(\r\n      (contentReview) => `\r\n        <div tabindex=\"0\" class=\"itemReviews\">\r\n          <div tabindex=\"0\" class=\"content-review\">\r\n            <p tabindex=\"0\" class=\"name-reviewer\">${contentReview.name}</p>\r\n            <p tabindex=\"0\" class=\"review\">${contentReview.review}</p>\r\n            <p tabindex=\"0\" class=\"date-review\">${contentReview.date}</p>\r\n          </div>\r\n        </div>`,\r\n    )\r\n    .join('')}\r\n      </div>\r\n    </div>`;\r\n\r\nconst createLikeRestaurantButtonTemplate = () => `\r\n  <button aria-label=\"like this restaurant\" id=\"likeButton\" class=\"like\">\r\n    <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n  </button>\r\n`;\r\n\r\nconst createUnlikeRestaurantButtonTemplate = () => `\r\n  <button aria-label=\"unlike this restaurant\" id=\"likeButton\" class=\"like\">\r\n    <i class=\"fa fa-heart\" aria-hidden=\"true\"></i>\r\n  </button>\r\n`;\r\n\r\nexport {\r\n  createRestaurantItemTemplate,\r\n  createRestaurantDetailTemplate,\r\n  createLikeRestaurantButtonTemplate,\r\n  createUnlikeRestaurantButtonTemplate,\r\n};\r\n","import RestaurantDbSource from '../../data/restaurantdb-source';\r\nimport { createRestaurantItemTemplate } from '../templates/template-creator';\r\n\r\nconst Home = {\r\n  async render() {\r\n    return `\r\n      <restaurant-list id=\"restaurant-list\" tabindex=\"0\" class=\"restaurant-list\">\r\n      </restaurant-list>\r\n    `;\r\n  },\r\n\r\n  async afterRender() {\r\n    const restaurantList = document.querySelector('#restaurant-list');\r\n    const restaurants = await RestaurantDbSource.allRestaurant();\r\n\r\n    restaurants.forEach((restaurant) => {\r\n      restaurantList.innerHTML += createRestaurantItemTemplate(restaurant);\r\n    });\r\n  },\r\n};\r\n\r\nexport default Home;\r\n","import FavoriteRestaurantIdb from '../data/favoriteRestaurant-idb';\r\nimport {\r\n  createLikeRestaurantButtonTemplate,\r\n  createUnlikeRestaurantButtonTemplate,\r\n} from '../views/templates/template-creator';\r\n\r\nconst LikeButtonPresenter = {\r\n  async init({ likeButtonContainer, restaurant }) {\r\n    this._likeButtonContainer = likeButtonContainer;\r\n    this._restaurant = restaurant;\r\n    this._favoriteRestaurants = FavoriteRestaurantIdb;\r\n\r\n    await this._renderButton();\r\n  },\r\n\r\n  async _renderButton() {\r\n    const { id } = this._restaurant;\r\n\r\n    if (await this._isRestaurantExist(id)) {\r\n      this._renderLiked();\r\n    } else {\r\n      this._renderLike();\r\n    }\r\n  },\r\n\r\n  async _isRestaurantExist(id) {\r\n    const restaurant = await this._favoriteRestaurants.getRestaurant(id);\r\n\r\n    return !!restaurant;\r\n  },\r\n\r\n  _renderLike() {\r\n    this._likeButtonContainer.innerHTML = createLikeRestaurantButtonTemplate();\r\n\r\n    const likeButton = document.querySelector('#likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurants.putRestaurant(this._restaurant);\r\n      this._renderButton();\r\n    });\r\n  },\r\n\r\n  _renderLiked() {\r\n    this._likeButtonContainer.innerHTML = createUnlikeRestaurantButtonTemplate();\r\n\r\n    const likeButton = document.querySelector('#likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurants.deleteRestaurant(this._restaurant.id);\r\n      this._renderButton();\r\n    });\r\n  },\r\n};\r\n\r\nexport default LikeButtonPresenter;\r\n","import UrlParser from '../../routes/url-parser';\r\nimport RestaurantDbSource from '../../data/restaurantdb-source';\r\nimport { createRestaurantDetailTemplate } from '../templates/template-creator';\r\nimport LikeButtonPresenter from '../../utils/like-button-presenter';\r\nimport FavoriteRestaurantIdb from '../../data/favoriteRestaurant-idb';\r\n\r\nconst Detail = {\r\n  async render() {\r\n    return `\r\n    <div tabindex=\"0\" class=\"detailContainer\" id=\"detailContainer\"></div>\r\n    <form-reviews></form-reviews>\r\n    <div tabindex=\"0\" id=\"likeButtonContainer\"></div>\r\n    `;\r\n  },\r\n\r\n  async afterRender() {\r\n    const url = UrlParser.parseActiveUrlWithoutCombiner();\r\n    const restaurants = await RestaurantDbSource.detailRestaurant(url.id);\r\n    const detailContainer = document.querySelector('#detailContainer');\r\n\r\n    const { restaurant } = restaurants;\r\n    detailContainer.innerHTML = createRestaurantDetailTemplate(restaurant);\r\n\r\n    LikeButtonPresenter.init({\r\n      likeButtonContainer: document.querySelector('#likeButtonContainer'),\r\n      FavoriteRestaurant: FavoriteRestaurantIdb,\r\n      restaurant: {\r\n        id: restaurant.id,\r\n        name: restaurant.name,\r\n        rating: restaurant.rating,\r\n        address: restaurant.address,\r\n        city: restaurant.city,\r\n        pictureId: restaurant.pictureId,\r\n      },\r\n    });\r\n\r\n    const buttonReview = document.querySelector('#submit-review');\r\n    const nameReview = document.querySelector('#name-review');\r\n    const contentReview = document.querySelector('#content-review');\r\n\r\n    buttonReview.addEventListener('click', async (event) => {\r\n      if (window.navigator.onLine) {\r\n        event.preventDefault();\r\n        const review = {\r\n          id: restaurant.id,\r\n          name: nameReview.value,\r\n          review: contentReview.value,\r\n        };\r\n        RestaurantDbSource.sendReview(review);\r\n      } else {\r\n        console.log('Reviews cannot be added in offline mode');\r\n      }\r\n    });\r\n  },\r\n};\r\nexport default Detail;\r\n","import FavoriteRestaurantIdb from '../../data/favoriteRestaurant-idb';\r\nimport { createRestaurantItemTemplate } from '../templates/template-creator';\r\n\r\nconst Favorite = {\r\n  async render() {\r\n    return `\r\n    <div tabindex=\"0\" class=\"content\">\r\n    <h2 tabindex=\"0\" class=\"content__heading\">Favorite</h2>\r\n    <div id=\"foods\" tabindex=\"0\" class=\"foods\">\r\n\r\n    </div>\r\n  </div>\r\n    `;\r\n  },\r\n\r\n  async afterRender() {\r\n    const foods = await FavoriteRestaurantIdb.getAllRestaurants();\r\n    const foodsContainer = document.querySelector('#foods');\r\n\r\n    if (foods.length) {\r\n      foods.forEach((food) => {\r\n        foodsContainer.innerHTML += createRestaurantItemTemplate(food);\r\n      });\r\n    } else {\r\n      foodsContainer.innerHTML += '<h1 class=\"empty__favorite\">Tidak ada favorite restaurant</h1>';\r\n    }\r\n  },\r\n};\r\n\r\nexport default Favorite;\r\n","import Home from '../views/pages/home';\r\nimport Detail from '../views/pages/detail';\r\nimport Favorite from '../views/pages/favorite';\r\n\r\nconst routes = {\r\n  '/': Home,\r\n  '/home': Home,\r\n  '/detail/:id': Detail,\r\n  '/favorite': Favorite,\r\n};\r\n\r\nexport default routes;\r\n","import UrlParser from '../routes/url-parser';\r\nimport routes from '../routes/routes';\r\n\r\nclass App {\r\n  constructor({ content }) {\r\n    this._content = content;\r\n  }\r\n\r\n  async renderPage() {\r\n    const url = UrlParser.parseActiveUrlWithCombiner();\r\n    const page = routes[url];\r\n    this._content.innerHTML = await page.render();\r\n    await page.afterRender();\r\n  }\r\n}\r\nconst skipLinkElem = document.querySelector('.skip-link');\r\nskipLinkElem.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  document.querySelector('#mainContent').focus();\r\n});\r\n\r\nexport default App;\r\n"],"names":["navigator","console","log","wb","WorkboxWindow","register","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","createRestaurantItemTemplate","restaurant","CONFIG","pictureId","name","rating","city","createRestaurantDetailTemplate","description","address","menus","foods","map","food","join","drinks","drink","customerReviews","contentReview","review","date","i","render","afterRender","restaurantList","document","querySelector","RestaurantDbSource","forEach","innerHTML","init","likeButtonContainer","_likeButtonContainer","_restaurant","_favoriteRestaurants","FavoriteRestaurantIdb","_renderButton","_isRestaurantExist","_renderLiked","_renderLike","getRestaurant","addEventListener","putRestaurant","deleteRestaurant","Home","UrlParser","restaurants","detailContainer","LikeButtonPresenter","FavoriteRestaurant","buttonReview","nameReview","event","onLine","preventDefault","value","foodsContainer","length","App","content","_content","page","routes","focus"],"sourceRoot":""}